"use strict";
var React = require('react');
var ReactDOM = require('react-dom');
var toolbar_1 = require('./app/toolbar');
var redux_1 = require('redux');
var react_redux_1 = require('react-redux');
var action_types_1 = require('./app/action_types');
var Reducers = {
    zoomLevel: function (state, action) {
        if (state === void 0) { state = 0; }
        console.log("reducers zoom level");
        switch (action.type) {
            case action_types_1["default"].SET_ZOOM_LEVEL:
                return action.zoomLevel;
            case action_types_1["default"].RESET_ZOOM:
                return 0;
            default:
                return state;
        }
    },
    panPosition: function (state, action) {
        if (state === void 0) { state = { x: 0, y: 0 }; }
        switch (action.type) {
            case action_types_1["default"].PAN:
                return action.panPosition;
            case action_types_1["default"].PAN_START:
            case action_types_1["default"].PAN_STOP:
            default:
                return state;
        }
    }
};
var panZoom = redux_1.combineReducers({
    zoomLevel: Reducers.zoomLevel,
    panPosition: Reducers.panPosition
});
var toolbarOptions = {
    callbacks: {
        pan: Function,
        resetZoom: function () {
            console.log("HostAPI reset zoom");
        },
        zoom: function (zoomLevel) {
            console.log("HostAPI zooming to " + zoomLevel);
        }
    }
};
ReactDOM.render(React.createElement(react_redux_1.Provider, {store: redux_1.createStore(panZoom)}, React.createElement(toolbar_1["default"], null)), document.getElementById('root'));
